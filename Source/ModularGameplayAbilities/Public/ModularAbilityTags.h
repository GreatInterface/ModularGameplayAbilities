// Copyright Chronicler.


#pragma once

#include "NativeGameplayTags.h"

namespace ModularAbilityTags
{
	MODULARGAMEPLAYABILITIES_API	FGameplayTag FindTagByString(const FString& TagString, bool bMatchPartialString = false);

	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_IsDead);
	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_Cooldown);
	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_Cost);
	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_TagsBlocked);
	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_TagsMissing);
	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_Networking);
	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_ActivationGroup);

	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_Behavior_SurvivesDeath);

	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Crouching);
	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_AutoRunning);
	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Death);
	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Death_Dying);
	MODULARGAMEPLAYABILITIES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Death_Dead);
};
